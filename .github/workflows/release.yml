name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build And Release
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache-dependency-path: web/package-lock.json
          cache: 'npm'

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            web/node_modules
            web-lib/node_modules
            web-component/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/web/package-lock.json', '**/web-lib/package-lock.json', '**/web-component/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: NPM Web-lib
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          cd web-lib
          npm ci

      - name: NPM Web-component
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          cd web-component
          npm ci      

      - name: NPM Web
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          cd web
          npm ci

      - name: Build web-lib
        run: |
          cd web-lib
          npm run build

      - name: Build web-component
        run: |
          cd web-lib
          npm run build

      - name: Build web
        run: |
          cd web
          npm run build

      - name: Cache Rust
        id: cache-rust
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Setup Rust
        if: steps.cache-rust.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@1.82.0

      - name: Build and Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          includeRelease: true
          tagName: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          releaseBody: "See the assets below to download this version and install."
          releaseDraft: false
          prerelease: false
